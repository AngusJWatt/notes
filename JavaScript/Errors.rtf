{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red127\green127\blue127;\red251\green2\blue7;}
{\*\expandedcolortbl;;\cssrgb\c57046\c57047\c57046;\cssrgb\c100000\c14913\c0;}
\paperw11900\paperh16840\vieww12000\viewh15840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \ul \ulc0 Errors\
\ulnone \
	In JavaScript, when a runtime error occurs, an instance of the Error class is thrown. If an uncaught error is thrown, the program will terminate at the occurrence of the error.\
\

\f1\i 	console.log(\'93Will log.\'94);\
	let instance = new UndefinedClass;\
	console.log(\'93Will not log\'94);\
	\cf2 /*Will log.\cf0 \
	\cf3 Uncaught ReferenceError: UndefinedClass is not defined\cf2 */\cf0 \

\f0\i0 \
\ul Try/Catch/Finally\
\ulnone \
	For any code that could throw an error, it may be surrounded in a 
\f1\i try
\f0\i0  statement. If the 
\f1\i try 
\f0\i0 block is then followed by a 
\f1\i catch
\f0\i0  statement, the error will isolated, allowing the code outside of the 
\f1\i try/catch
\f0\i0  block to run without terminating.\

\f1\i \
	try \{\
		let instance = new UndefinedClass;\
	\} catch(err) \{\
		console.log(err);\
	\}\
	console.log(\'93Will log.\'94);\
	\cf2 /*Uncaught ReferenceError: UndefinedClass is not defined\
	Will log.*/\cf0 \

\f0\i0 \
	Alternatively, the 
\f1\i try
\f0\i0  block could be followed by a 
\f1\i finally
\f0\i0  statement. The code inside the finally block will run but, after that, the program will terminate.\
	try \{\
		let instance = new UndefinedClass;\
	\} finally \{\
		console.log(\'93Will log.\'94);\
	\}\
	console.log(\'93Will not log.\'94);\
	\cf2 /*Will log.\
	\cf3 Uncaught ReferenceError: UndefinedClass is not defined\cf2 */\
\
}